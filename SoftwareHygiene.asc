&nbsp;I had the privilege of working with David Tilbrook almost 25 years ago.&nbsp; He was the first person with whom I ever worked that clearly articulated proper software construction discipline for collaborative endeavours and captured a summary of it under the title of &ldquo;<a href="http://www.qef.com/html/docs/swhygiene.pdf">Washing Behind Your Ears: Principles of Software Hygiene</a>&rdquo;. &nbsp;<br />
<br />
David articulated these practices pre-World Wide Web.&nbsp; We weren&rsquo;t yet living in a world where the Web had so completely removed the friction of time and space from sharing and collaborating on software that even the early Internet enabled.&nbsp; The Open Source Definition hadn&rsquo;t yet been coined.&nbsp; The forges hadn&rsquo;t yet been built. &nbsp;<br />
<br />
The world has progressed and there&rsquo;s a new sort of software hygiene that&rsquo;s now required. I first learned back in May 2012 that one of the most popular software collaboration forges, Github, doesn&rsquo;t require a project creator to choose a license for their software.&nbsp; Today, James Governor reminded me of this madness when he tweeted: <br />
<br />
<blockquote class="twitter-tweet">
<p>younger devs today are about POSS - Post open source software. f### the license and governance, just commit to github.</p>
&mdash; James Governor (@monkchips) <a data-datetime="2012-09-17T06:34:00+00:00" href="https://twitter.com/monkchips/status/247584170967175169">September 17, 2012</a></blockquote>
<br />
I replied:<br />
<br />
<blockquote class="twitter-tweet" data-in-reply-to="247584170967175169">
<p>@<a href="https://twitter.com/monkchips">monkchips</a> Governance implies community but promiscuous sharing w/out a license leads to software transmitted diseases</p>
&mdash; Stephen Walli (@stephenrwalli) <a href="https://twitter.com/stephenrwalli/status/247597785069789184" data-datetime="2012-09-17T07:28:06+00:00">September 17, 2012</a></blockquote>
<br />
Pretty soon, a lively discussion was off and running with <a href="https://twitter.com/nearyd">@nearyd</a>, <a href="https://twitter.com/mmilinkov">@mmilinkov</a>, <a href="https://twitter.com/webmink">@webmink</a>, <a href="https://twitter.com/dberkholz">@dberkholz</a>, and <a href="https://twitter.com/tieguy">@tieguy</a> joining in.&nbsp; (Well as lively as Twitter can get.) <br />
<br />
Here&rsquo;s the problem: governments protect software creations using copyright law.&nbsp; Different governments have different views of how it applies and slightly different terminology.&nbsp; Some countries worry about author&rsquo;s moral rights.&nbsp; Others don&rsquo;t.&nbsp; Countries also have different opinions on what the public domain means and how it can (or can&rsquo;t) be applied with respect to software.&nbsp; Essentially, as with all things in the software legal space, it&rsquo;s a mess. [This is probably a good time to remind the reader that I Am Not A Lawyer.]<br />
<br />
Living in a proprietary software world, it was relatively &ldquo;easy&rdquo;.&nbsp; Companies asserted their copyrights as protection for their software products.&nbsp; As software publication and collaboration became ubiquitous, we saw the rise of free and open source software licenses.&nbsp; These were used as statements of sharing intent and expectation by authors on their works.&nbsp; If a collaborative community arose around the project, these licenses were often the initial declaration of the social contract long before the community ever evolved to statements of governance and codes of conduct. &nbsp;<br />
<br />
So here&rsquo;s the problem.&nbsp; If you share software on the Internetz without using a license, the software is protected by your copyright and all rights revert to you.&nbsp; You have made no statement about how it might be used, or what you would agree to, now or in the future.&nbsp; If you share on a promiscuous site like Github, where forking is encouraged, and you make no such sharing statement, and start accepting change requests from other developers without licenses, then you&rsquo;re collectively creating a copyright mess that will eventually hurt people using your software. &nbsp;<br />
<br />
Not caring, or naively believing it doesn&rsquo;t matter because you believe &ldquo;people can do whatever they want with my software,&rdquo; or worse using others&rsquo; unlicensed software in your own means you will eventually hit a point where you stifle the growth of your software.&nbsp; It&rsquo;s not that you&rsquo;re necessarily creating a provenance mess where &ldquo;dirty&rdquo; IP will creep into the mix (although I&rsquo;m sure some companies will try to provoke that fear to sell you things, or worse sell other people things to &ldquo;protect them&rdquo; from <span style="text-decoration: underline;"><em>your software</em></span>).&nbsp; It&rsquo;s very possible that you could create a Software Transmitted Disease, but what you are definitely doing is limiting your project&rsquo;s growth. &nbsp;<br />
<br />
Professional developers have a working understanding of software copyright.&nbsp; By professional, I mean developers more knowledgeable than you that can make your project better through contribution.&nbsp; When they see that there&rsquo;s no license on your pool of software, if you&rsquo;re lucky, they will ask you to declare one so they can know if they want to adopt and contribute.&nbsp; If you&rsquo;re not lucky, then they will simply move on and you will have lost whatever contributions they may have brought to your party.&nbsp; I&rsquo;m not talking about Great Knowledgeable Developers who are going to join your project and stay.&nbsp; If you&rsquo;re lucky, you&rsquo;ll attract a few folks to your world that know a few things more about it and share them.&nbsp; That&rsquo;s ultimately the economic strength of a well run open source project.&nbsp; Collectively we're better.&nbsp; Neither am I talking about you might need to do when Building a Big Community.&nbsp; I&rsquo;m simply talking about sharing your software brilliance.&nbsp; Because that&rsquo;s why you published on a site like Github, right?&nbsp; So you could share and learn.&nbsp; If you don&rsquo;t put a license on it, you risk losing knowledgeable participation.<br />
<br />
So here are some &ldquo;bumper sticker&rdquo; banners to help remind you of the necessary software hygiene of the new millennium: <br />
<ul>
    <li>
    Github without licenses is like free sex without condoms.</li>
    <li>
    Practice safe software on the Internet -- use a license. </li>
    <li>
    Practice good software hygiene -- license your software.</li>
    <li>
    Don&rsquo;t fork around without a license.&nbsp; </li>
</ul>
<p>Collaborative development with liberal open source licenses is one of the best things that has come out of the World Wide Web phenomenon and helps sustain and grow it.&nbsp; Do it wisely.</p>